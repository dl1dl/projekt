@model Recipe

@{
    ViewData["Title"] = @Model.Name;
}

<div>
    <h2>@Model.Name</h2>

    @await Component.InvokeAsync("FavoriteRecipes",
        new { recipeID = Model.RecipeID, favoriteRecipeID = ViewBag.favoriteRecipeID, isAuthor = ViewBag.isAuthor })

    @if (Model.Author == null)
    {
        <p>autor: <i>profil skasowany</i></p>
    }
    else
    {
        <p>autor: <a asp-controller="Account" asp-action="Details" asp-route-id="@Model.Author.Id">@Model.Author.Email</a></p>
    }

    <p>kategoria: <a asp-controller="Category" asp-action="AllRecipes" asp-route-id="@Model.Category.CategoryID">@Model.Category.Name</a></p>
    <p>trudność wykonania: @Model.DifficultyLevel.Name</p>
    <p>Opis przepisu: <br />@Model.Description</p>
</div>

<div>
    <h4>Instrukcja wykonania</h4>
    <ol>
    @foreach (var step in Model.Steps)
    {
        <li>@step.Description</li>
    }
    </ol>
</div>

<div>
    tagi:
    @foreach (var tag in Model.Taggings)
    {
        <a asp-controller="Tag" asp-action="Index" class="btn btn-default" asp-route-id="@tag.TagName">@tag.TagName</a>
    }
</div>

<div>
    @await Component.InvokeAsync("AddComment", new { recipeID = Model.RecipeID })

    <h3>Komentarze:</h3>
    @foreach (var c in Model.Comments)
    {
        @if (c.Author == null)
        {
            <h6><i>profil skasowany</i></h6>
        }
        else
        {
            <h6><a asp-controller="Account" asp-action="Details" asp-route-id="@c.Author.Id">@c.Author</a></h6>
        }

        <p>@c.Body</p>
    }
</div>